import React, { useState } from "react";

// –ü—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞
const pickupPoints = [
  {
    name: "–ú–∞—Ä–∏—è",
    coords: [55.661496, 37.415622],
    address: "–ë–æ—Ä–æ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, –¥.2–∫7",
  },
  {
    name: "–ï–ª–µ–Ω–∞",
    coords: [55.739407, 37.777419],
    address: "—É–ª. –ö—É—Å–∫–æ–≤—Å–∫–∞—è, –¥.17",
  },
  {
    name: "–î–∞—Ä—å—è",
    coords: [55.587779, 37.603415],
    address: "–í–∞—Ä—à–∞–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, –¥.141–∫13",
  },
  {
    name: "–ù–∞–¥–µ–∂–¥–∞",
    coords: [55.859615, 37.440658],
    address: "—É–ª. –§–æ–º–∏—á—ë–≤–æ–π, –¥.14–∫3",
  },
  {
    name: "–ï–ª–µ–Ω–∞",
    coords: [55.657306, 37.609991],
    address: "–ë–æ–ª–æ—Ç–Ω–∏–∫–æ–≤—Å–∫–∞—è —É–ª–∏—Ü–∞, 10–ê",
  },
  {
    name: "–ì–∞–ª–∏–Ω–∞ (–∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ - –ï–ª–∏–∑–∞–≤–µ—Ç–∞)",
    coords: [55.805827, 37.794064],
    address: "—É–ª. –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–∞ –§–µ–¥–∏–Ω–∞, –¥ 8",
  },
  {
    name: "–ê–Ω–∞—Å—Ç–∞—Å–∏—è",
    coords: [55.806762, 37.575109],
    address: "2-—è –•—É—Ç–æ—Ä—Å–∫–∞—è —É–ª–∏—Ü–∞, –¥. 18–∫2",
  },
  {
    name: "–Ø–Ω–æ—à",
    coords: [55.675245, 37.527920],
    address: "–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, –¥.93",
  },
  {
    name: "–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω ¬´–•–∏—Ç—Ä—ã–π –Ω–æ—Å¬ª",
    coords: [55.854517, 37.683060],
    address: "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–æ–µ —à–æ—Å—Å–µ 12–∫2",
  },
  {
    name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ ¬´Dr.Vetson¬ª",
    coords: [55.641122, 37.595501],
    address: "–ë–∞–ª–∞–∫–ª–∞–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, –¥. 9",
  },
  {
    name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ ¬´Dr.Hug¬ª (–ú–∞–ª–∞—è –§–∏–ª—ë–≤—Å–∫–∞—è)",
    coords: [55.738302, 37.472917],
    address: "—É–ª. –ú–∞–ª–∞—è –§–∏–ª—ë–≤—Å–∫–∞—è, –¥.12–∫1",
  },
  {
    name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ ¬´Dr.Hug¬ª (–•–æ—Ä–æ—à—ë–≤—Å–∫–æ–µ —à–æ—Å—Å–µ)",
    coords: [55.781003, 37.537550],
    address: "–•–æ—Ä–æ—à—ë–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, –¥. 38–î—Å3",
  },
  {
    name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ ¬´–°–∏–Ω–∏—Ü–∞¬ª",
    coords: [55.724403, 37.410654],
    address: "—É–ª. –ú–∞—Ä—à–∞–ª–∞ –ù–µ–¥–µ–ª–∏–Ω–∞, –¥.16—Å5",
  },
  {
    name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ \"–ü–∞—Ä–∞ –∫–∞–ø–∏–±–∞—Ä\"",
    coords: [55.794032, 37.495078],
    address: "—É–ª.–ù–∞—Ä–æ–¥–Ω–æ–≥–æ –æ–ø–æ–ª—á–µ–Ω–∏—è, –¥.48–∫1",
  },
  {
    name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ \"–õ–∞–º–∞ —Ä—è–¥–æ–º\"",
    coords: [55.718076, 37.433597],
    address: "—É–ª.–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è, –¥.10",
  },
];

const metroStations = {
  "–û–∫—Ç—è–±—Ä—å—Å–∫–æ–µ –ø–æ–ª–µ": [55.7934, 37.4936],
  "–°–æ–∫–æ–ª": [55.8058, 37.5146],
  "–¢–∞–≥–∞–Ω—Å–∫–∞—è": [55.7416, 37.6528],
};

function haversineDistance([lat1, lon1], [lat2, lon2]) {
  const toRad = (val) => (val * Math.PI) / 180;
  const R = 6371;
  const dLat = toRad(lat2 - lat1);
  const dLon = toRad(lon2 - lon1);
  const a =
    Math.sin(dLat / 2) ** 2 +
    Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  return R * c;
}

const NearestPickupPoint = () => {
  const [station, setStation] = useState("");
  const [result, setResult] = useState(null);

  const handleSearch = () => {
    const stationCoords = metroStations[station];
    if (!stationCoords) {
      alert("–°—Ç–∞–Ω—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é.");
      return;
    }

    const distances = pickupPoints.map((point) => ({
      ...point,
      distance: haversineDistance(stationCoords, point.coords).toFixed(2),
    }));

    const nearest = distances.reduce((a, b) =>
      parseFloat(a.distance) < parseFloat(b.distance) ? a : b
    );

    const routeTimes = {
      publicTransport: "35 –º–∏–Ω",
      car: "20 –º–∏–Ω",
      walking: "1 —á 10 –º–∏–Ω",
    };

    setResult({ nearest, stationCoords, routeTimes });
  };

  return (
    <div className="p-4 max-w-xl mx-auto bg-white shadow rounded-xl">
      <h2 className="text-xl font-bold mb-4">–ü–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø—É–Ω–∫—Ç–∞ —Å–±–æ—Ä–∞</h2>

      <input
        type="text"
        placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏—é –º–µ—Ç—Ä–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –û–∫—Ç—è–±—Ä—å—Å–∫–æ–µ –ø–æ–ª–µ)"
        value={station}
        onChange={(e) => setStation(e.target.value)}
        className="border p-2 w-full mb-2 rounded"
      />

      <button
        onClick={handleSearch}
        className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
      >
        –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –ø—É–Ω–∫—Ç
      </button>

      {result && (
        <div className="mt-4">
          <p className="mb-2">
            üìç –ë–ª–∏–∂–∞–π—à–∏–π –ø—É–Ω–∫—Ç: <strong>{result.nearest.name}</strong>
          </p>
          <p>–ê–¥—Ä–µ—Å: {result.nearest.address}</p>
          <p>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {result.nearest.distance} –∫–º</p>
          <p>üöå –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {result.routeTimes.publicTransport}</p>
          <p>üöó –ú–∞—à–∏–Ω–∞: {result.routeTimes.car}</p>
          <p>üö∂ –ü–µ—à–∫–æ–º: {result.routeTimes.walking}</p>

          <div className="mt-4 p-2 bg-gray-100 rounded">
            <p className="font-bold">üìß –ü–∏—Å—å–º–æ –∫–ª–∏–µ–Ω—Ç—É:</p>
            <pre className="text-sm whitespace-pre-wrap">
              {`–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ–º–æ—â—å –≤ –ø—É–Ω–∫—Ç–µ "${result.nearest.name}" –ø–æ –∞–¥—Ä–µ—Å—É: ${result.nearest.address}.
–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –º–µ—Ç—Ä–æ "${station}": ${result.nearest.distance} –∫–º.
–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –≤ –ø—É—Ç–∏:
- –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: ${result.routeTimes.publicTransport}
- –ú–∞—à–∏–Ω–∞: ${result.routeTimes.car}
- –ü–µ—à–∫–æ–º: ${result.routeTimes.walking}`}
            </pre>
          </div>
        </div>
      )}
    </div>
  );
};

export default NearestPickupPoint;